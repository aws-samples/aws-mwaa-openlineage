{
 "Metadata": {
  "cdk_nag": {
   "rules_to_suppress": [
    {
     "reason": "No security group have allow inbound to any IP",
     "id": "AwsSolutions-EC23"
    },
    {
     "reason": "Allow managed policies to be used",
     "id": "AwsSolutions-IAM4"
    },
    {
     "reason": "Using CDK IAM allow permissions.",
     "id": "AwsSolutions-IAM5"
    },
    {
     "reason": "Using Crawler default setting.",
     "id": "AwsSolutions-GL1"
    },
    {
     "reason": "No VPC Flow log enabled. Default behaviour.",
     "id": "AwsSolutions-VPC7"
    },
    {
     "reason": "Referencing default runtime used by CDK for Python3.8",
     "id": "AwsSolutions-L1"
    },
    {
     "reason": "Bucket will be used to store server access logs.",
     "id": "AwsSolutions-S1"
    }
   ]
  }
 },
 "Resources": {
  "vpcA2121C38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/Resource"
   }
  },
  "vpcPublicSubnet1Subnet2E65531E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.0.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet1/Subnet"
   }
  },
  "vpcPublicSubnet1RouteTable48A2DF9B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet1/RouteTable"
   }
  },
  "vpcPublicSubnet1RouteTableAssociation5D3F4579": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet1Subnet2E65531E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "vpcPublicSubnet1DefaultRoute10708846": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "RouteTableId": {
     "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
    }
   },
   "DependsOn": [
    "vpcVPCGW7984C166"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "vpcPublicSubnet1EIPDA49DCBE": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet1/EIP"
   }
  },
  "vpcPublicSubnet1NATGateway9C16659E": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcPublicSubnet1EIPDA49DCBE",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet1Subnet2E65531E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "vpcPublicSubnet1DefaultRoute10708846",
    "vpcPublicSubnet1RouteTableAssociation5D3F4579"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet1/NATGateway"
   }
  },
  "vpcPublicSubnet2Subnet009B674F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.32.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet2/Subnet"
   }
  },
  "vpcPublicSubnet2RouteTableEB40D4CB": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet2/RouteTable"
   }
  },
  "vpcPublicSubnet2RouteTableAssociation21F81B59": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet2Subnet009B674F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "vpcPublicSubnet2DefaultRouteA1EC0F60": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "RouteTableId": {
     "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
    }
   },
   "DependsOn": [
    "vpcVPCGW7984C166"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "vpcPublicSubnet2EIP9B3743B1": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet2/EIP"
   }
  },
  "vpcPublicSubnet2NATGateway9B8AE11A": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcPublicSubnet2EIP9B3743B1",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet2Subnet009B674F"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "vpcPublicSubnet2DefaultRouteA1EC0F60",
    "vpcPublicSubnet2RouteTableAssociation21F81B59"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet2/NATGateway"
   }
  },
  "vpcPublicSubnet3Subnet11B92D7C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2c",
    "CidrBlock": "10.0.64.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet3/Subnet"
   }
  },
  "vpcPublicSubnet3RouteTableA3C00665": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet3/RouteTable"
   }
  },
  "vpcPublicSubnet3RouteTableAssociationD102D1C4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPublicSubnet3RouteTableA3C00665"
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet3Subnet11B92D7C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet3/RouteTableAssociation"
   }
  },
  "vpcPublicSubnet3DefaultRoute3F356A11": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "RouteTableId": {
     "Ref": "vpcPublicSubnet3RouteTableA3C00665"
    }
   },
   "DependsOn": [
    "vpcVPCGW7984C166"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet3/DefaultRoute"
   }
  },
  "vpcPublicSubnet3EIP2C3B9D91": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet3/EIP"
   }
  },
  "vpcPublicSubnet3NATGateway82F6CA9E": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcPublicSubnet3EIP2C3B9D91",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet3Subnet11B92D7C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PublicSubnet3"
     }
    ]
   },
   "DependsOn": [
    "vpcPublicSubnet3DefaultRoute3F356A11",
    "vpcPublicSubnet3RouteTableAssociationD102D1C4"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PublicSubnet3/NATGateway"
   }
  },
  "vpcPrivateSubnet1Subnet934893E8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.96.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet1/Subnet"
   }
  },
  "vpcPrivateSubnet1RouteTableB41A48CC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet1/RouteTable"
   }
  },
  "vpcPrivateSubnet1RouteTableAssociation67945127": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
    },
    "SubnetId": {
     "Ref": "vpcPrivateSubnet1Subnet934893E8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "vpcPrivateSubnet1DefaultRoute1AA8E2E5": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcPublicSubnet1NATGateway9C16659E"
    },
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "vpcPrivateSubnet2Subnet7031C2BA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.128.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet2/Subnet"
   }
  },
  "vpcPrivateSubnet2RouteTable7280F23E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet2/RouteTable"
   }
  },
  "vpcPrivateSubnet2RouteTableAssociation007E94D3": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
    },
    "SubnetId": {
     "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "vpcPrivateSubnet2DefaultRouteB0E07F99": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcPublicSubnet2NATGateway9B8AE11A"
    },
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "vpcPrivateSubnet3Subnet985AC459": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2c",
    "CidrBlock": "10.0.160.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet3/Subnet"
   }
  },
  "vpcPrivateSubnet3RouteTable24DA79A0": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet3/RouteTable"
   }
  },
  "vpcPrivateSubnet3RouteTableAssociationC58B3C2C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet3RouteTable24DA79A0"
    },
    "SubnetId": {
     "Ref": "vpcPrivateSubnet3Subnet985AC459"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet3/RouteTableAssociation"
   }
  },
  "vpcPrivateSubnet3DefaultRoute30C45F47": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcPublicSubnet3NATGateway82F6CA9E"
    },
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet3RouteTable24DA79A0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/PrivateSubnet3/DefaultRoute"
   }
  },
  "vpcIGWE57CBDCA": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/IGW"
   }
  },
  "vpcVPCGW7984C166": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/VPCGW"
   }
  },
  "vpce6ad3311f566426e82916937101db6a19E323A96": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "RouteTableIds": [
     {
      "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
     },
     {
      "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
     },
     {
      "Ref": "vpcPrivateSubnet3RouteTable24DA79A0"
     },
     {
      "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
     },
     {
      "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
     },
     {
      "Ref": "vpcPublicSubnet3RouteTableA3C00665"
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".s3"
      ]
     ]
    },
    "VpcEndpointType": "Gateway",
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/e6ad3311-f566-426e-8291-6937101db6a1/Resource"
   }
  },
  "vpcmwaaapiendpointSecurityGroup6C80EAED": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "vpc-s3/vpc/mwaa_api_endpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "vpcA2121C38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "vpcA2121C38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/mwaa_api_endpoint/SecurityGroup/Resource"
   }
  },
  "vpcmwaaapiendpoint78FE5638": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "vpcmwaaapiendpointSecurityGroup6C80EAED",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-west-2.airflow.api",
    "SubnetIds": [
     {
      "Ref": "vpcPrivateSubnet1Subnet934893E8"
     },
     {
      "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
     },
     {
      "Ref": "vpcPrivateSubnet3Subnet985AC459"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/mwaa_api_endpoint/Resource"
   }
  },
  "vpcmwaaenvendpointSecurityGroup1D4A5698": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "vpc-s3/vpc/mwaa_env_endpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "vpcA2121C38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "vpcA2121C38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/mwaa_env_endpoint/SecurityGroup/Resource"
   }
  },
  "vpcmwaaenvendpointF99944E5": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "vpcmwaaenvendpointSecurityGroup1D4A5698",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-west-2.airflow.env",
    "SubnetIds": [
     {
      "Ref": "vpcPrivateSubnet1Subnet934893E8"
     },
     {
      "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
     },
     {
      "Ref": "vpcPrivateSubnet3Subnet985AC459"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/mwaa_env_endpoint/Resource"
   }
  },
  "vpcmwaaopsendpointSecurityGroupD83E741B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "vpc-s3/vpc/mwaa_ops_endpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "vpcA2121C38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "vpcA2121C38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc-s3/vpc"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/mwaa_ops_endpoint/SecurityGroup/Resource"
   }
  },
  "vpcmwaaopsendpoint32E59E3C": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "vpcmwaaopsendpointSecurityGroupD83E741B",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-west-2.airflow.ops",
    "SubnetIds": [
     {
      "Ref": "vpcPrivateSubnet1Subnet934893E8"
     },
     {
      "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
     },
     {
      "Ref": "vpcPrivateSubnet3Subnet985AC459"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/vpc/mwaa_ops_endpoint/Resource"
   }
  },
  "redshiftsg9533EFF9": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Redshift sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/redshift_sg/Resource"
   }
  },
  "redshiftsgfromvpcs3airflowsgA1DBDDBA5439EC542FBE": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from vpcs3airflowsgA1DBDDBA:5439",
    "FromPort": 5439,
    "GroupId": {
     "Fn::GetAtt": [
      "redshiftsg9533EFF9",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "airflowsgB178D139",
      "GroupId"
     ]
    },
    "ToPort": 5439
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/redshift_sg/from vpcs3airflowsgA1DBDDBA:5439"
   }
  },
  "redshiftsgfromvpcs3lineagesg39C202D754391E94F0A2": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from vpcs3lineagesg39C202D7:5439",
    "FromPort": 5439,
    "GroupId": {
     "Fn::GetAtt": [
      "redshiftsg9533EFF9",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "lineagesg953DD04B",
      "GroupId"
     ]
    },
    "ToPort": 5439
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/redshift_sg/from vpcs3lineagesg39C202D7:5439"
   }
  },
  "lineagesg953DD04B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "OpenLineage instance sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "1.145.123.2/32",
      "Description": "Lineage from external ip",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "1.145.123.2/32",
      "Description": "Lineage from external ip",
      "FromPort": 3000,
      "IpProtocol": "tcp",
      "ToPort": 3000
     },
     {
      "CidrIp": "1.145.123.2/32",
      "Description": "Lineage from external ip",
      "FromPort": 5000,
      "IpProtocol": "tcp",
      "ToPort": 5000
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/lineage_sg/Resource"
   }
  },
  "lineagesgfromvpcs3airflowsgA1DBDDBA5000B0FA7A95": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from vpcs3airflowsgA1DBDDBA:5000",
    "FromPort": 5000,
    "GroupId": {
     "Fn::GetAtt": [
      "lineagesg953DD04B",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "airflowsgB178D139",
      "GroupId"
     ]
    },
    "ToPort": 5000
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/lineage_sg/from vpcs3airflowsgA1DBDDBA:5000"
   }
  },
  "airflowsgB178D139": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "MWAA sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/airflow_sg/Resource"
   }
  },
  "airflowsgfromvpcs3airflowsgA1DBDDBAALLTRAFFICFF0DD137": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "within MWAA",
    "GroupId": {
     "Fn::GetAtt": [
      "airflowsgB178D139",
      "GroupId"
     ]
    },
    "IpProtocol": "-1",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "airflowsgB178D139",
      "GroupId"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/airflow_sg/from vpcs3airflowsgA1DBDDBA:ALL TRAFFIC"
   }
  },
  "logs0B6081B1": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "AccessControl": "LogDeliveryWrite",
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "ObjectWriter"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "purpose",
      "Value": "LOGS"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "vpc-s3/logs/Resource"
   }
  },
  "logsPolicy42E8B048": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "logs0B6081B1"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "logs0B6081B1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "logs0B6081B1",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "logs0B6081B1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "logs0B6081B1",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetBucketAcl",
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudtrail.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "logs0B6081B1",
         "Arn"
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Condition": {
        "StringEquals": {
         "s3:x-amz-acl": "bucket-owner-full-control"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudtrail.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "logs0B6081B1",
            "Arn"
           ]
          },
          "/AWSLogs/091069288264/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/logs/Policy/Resource"
   }
  },
  "logsAutoDeleteObjectsCustomResourceA82AC6E1": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "logs0B6081B1"
    }
   },
   "DependsOn": [
    "logsPolicy42E8B048"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "vpc-s3/logs/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-091069288264-us-west-2",
     "S3Key": "6c1e9b465fa4b2d651dbc9ce3e732d8702a7b19137327684a71d89f1d355f1a2.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "logs0B6081B1"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.6c1e9b465fa4b2d651dbc9ce3e732d8702a7b19137327684a71d89f1d355f1a2",
    "aws:asset:property": "Code"
   }
  },
  "raw1D6FB60A": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "LoggingConfiguration": {
     "DestinationBucketName": {
      "Ref": "logs0B6081B1"
     }
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:8e939247",
      "Value": "true"
     },
     {
      "Key": "purpose",
      "Value": "RAW"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "vpc-s3/raw/Resource"
   }
  },
  "rawPolicy8A823466": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "raw1D6FB60A"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "raw1D6FB60A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "raw1D6FB60A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "raw1D6FB60A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "raw1D6FB60A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/raw/Policy/Resource"
   }
  },
  "rawAutoDeleteObjectsCustomResource2ED3E28E": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "raw1D6FB60A"
    }
   },
   "DependsOn": [
    "rawPolicy8A823466"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "vpc-s3/raw/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "s3deployrawAwsCliLayer2A617728": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-091069288264-us-west-2",
     "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/s3_deploy_raw/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "s3deployrawCustomResourceB6F0F86E": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-091069288264-us-west-2"
    ],
    "SourceObjectKeys": [
     "99b7fede9157d1791a1c106416a5fda95b43d60fa212d1f4ff5dbf91281e71cb.zip"
    ],
    "DestinationBucketName": {
     "Ref": "raw1D6FB60A"
    },
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "vpc-s3/s3_deploy_raw/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::cdk-hnb659fds-assets-091069288264-us-west-2"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::cdk-hnb659fds-assets-091069288264-us-west-2/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "raw1D6FB60A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "raw1D6FB60A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-091069288264-us-west-2",
     "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "s3deployrawAwsCliLayer2A617728"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "dltrail8B060035": {
   "Type": "AWS::CloudTrail::Trail",
   "Properties": {
    "EnableLogFileValidation": true,
    "EventSelectors": [
     {
      "DataResources": [
       {
        "Type": "AWS::S3::Object",
        "Values": [
         {
          "Fn::Join": [
           "",
           [
            {
             "Fn::GetAtt": [
              "raw1D6FB60A",
              "Arn"
             ]
            },
            "/"
           ]
          ]
         }
        ]
       }
      ]
     }
    ],
    "IncludeGlobalServiceEvents": true,
    "IsLogging": true,
    "IsMultiRegionTrail": true,
    "S3BucketName": {
     "Ref": "logs0B6081B1"
    }
   },
   "DependsOn": [
    "logsPolicy42E8B048"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/dl_trail/Resource"
   }
  },
  "database": {
   "Type": "AWS::Glue::Database",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseInput": {
     "Name": "cdkdl-redshift"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "vpc-s3/database"
   }
  },
  "crawlerrole40EA2665": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "glue.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSGlueServiceRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/crawler_role/Resource"
   }
  },
  "crawlerroleDefaultPolicy82E62E28": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "raw1D6FB60A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "raw1D6FB60A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "crawlerroleDefaultPolicy82E62E28",
    "Roles": [
     {
      "Ref": "crawlerrole40EA2665"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/crawler_role/DefaultPolicy/Resource"
   }
  },
  "crawlerraw": {
   "Type": "AWS::Glue::Crawler",
   "Properties": {
    "DatabaseName": "cdkdl-redshift",
    "Role": {
     "Ref": "crawlerrole40EA2665"
    },
    "Targets": {
     "S3Targets": [
      {
       "Path": {
        "Ref": "raw1D6FB60A"
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/crawler_raw"
   }
  },
  "awscustom79CCFF50": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"startCrawler\",\"service\":\"Glue\",\"parameters\":{\"Name\":\"",
       {
        "Ref": "crawlerraw"
       },
       "\"},\"physicalResourceId\":{\"id\":\"physicalResourceStateMachine\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"startCrawler\",\"service\":\"Glue\",\"parameters\":{\"Name\":\"",
       {
        "Ref": "crawlerraw"
       },
       "\"},\"physicalResourceId\":{\"id\":\"physicalResourceStateMachine\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "awscustomCustomResourcePolicy44EB9363"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "vpc-s3/aws-custom/Resource/Default"
   }
  },
  "awscustomCustomResourcePolicy44EB9363": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "glue:StartCrawler",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "awscustomCustomResourcePolicy44EB9363",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/aws-custom/CustomResourcePolicy/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-091069288264-us-west-2",
     "S3Key": "ed6cd104ff5f101d06dae8cb2b87cc6e6d69b9a22055b467ea6cae10ff023023.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "vpc-s3/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.ed6cd104ff5f101d06dae8cb2b87cc6e6d69b9a22055b467ea6cae10ff023023",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RXY+cMAz8LfeeTbu3L33d4z60UtWi5bSvyATDpRsSFDuHEOK/VwkIKlXt04zHZjI2j/J4OsqvDzDQQdX3g9GVnAoGdRcwUDmhepTTrVcia+wtz0QeKqNVESqLHLWdXV1gfIfK4K7v2pnIKQ2snd2GI3m55BF+AL8B4wCjyL3+BMbd+GIZvcVtYEmyVmdmUB8dWharcuvVi617py2vo1uZnBpQ+OdMgSp4zeObd6FP0f8rXGzrkWgWdJLTU1D3JeTKFsid0Wrc5bVeiicgjF+XU429cWPMLpfW8yYIIEImeY4wCwNdVYOcssZ+hxH9DT3FSxbatgbZ2ddgVbrtRrJmE2ehoZPT1S2/JuEecWGzUMaFmj1oI6f3CLGZyCxaEzC9/gwMFVDyyTwMBv08iyuSC16hyAKx6/aysf9o5d596hp9PIZISxYMrbbtumpp4polDKSMlueBMqPT5kIln9KvRpSafz37M3AfeBb5yB/OfjnJ41F+e/hFWh98sKw7lNcFfwOvQTUJAQMAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "vpc-s3/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "RedshiftSg": {
   "Value": {
    "Fn::GetAtt": [
     "redshiftsg9533EFF9",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "redshift-sg"
   }
  },
  "CrawlerName": {
   "Value": {
    "Ref": "crawlerraw"
   },
   "Export": {
    "Name": "crawler-name"
   }
  },
  "OpenlineageSg": {
   "Value": {
    "Fn::GetAtt": [
     "lineagesg953DD04B",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "openlineage-sg"
   }
  },
  "AirflowSg": {
   "Value": {
    "Fn::GetAtt": [
     "airflowsgB178D139",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "airflow-sg"
   }
  },
  "ExportsOutputFnGetAttlineagesg953DD04BGroupId23E672A7": {
   "Value": {
    "Fn::GetAtt": [
     "lineagesg953DD04B",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "vpc-s3:ExportsOutputFnGetAttlineagesg953DD04BGroupId23E672A7"
   }
  },
  "ExportsOutputRefvpcPublicSubnet1Subnet2E65531ECCB85041": {
   "Value": {
    "Ref": "vpcPublicSubnet1Subnet2E65531E"
   },
   "Export": {
    "Name": "vpc-s3:ExportsOutputRefvpcPublicSubnet1Subnet2E65531ECCB85041"
   }
  },
  "ExportsOutputFnGetAttraw1D6FB60AArn83459F5E": {
   "Value": {
    "Fn::GetAtt": [
     "raw1D6FB60A",
     "Arn"
    ]
   },
   "Export": {
    "Name": "vpc-s3:ExportsOutputFnGetAttraw1D6FB60AArn83459F5E"
   }
  },
  "ExportsOutputFnGetAttredshiftsg9533EFF9GroupId913184F2": {
   "Value": {
    "Fn::GetAtt": [
     "redshiftsg9533EFF9",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "vpc-s3:ExportsOutputFnGetAttredshiftsg9533EFF9GroupId913184F2"
   }
  },
  "ExportsOutputRefvpcPublicSubnet2Subnet009B674FB900C242": {
   "Value": {
    "Ref": "vpcPublicSubnet2Subnet009B674F"
   },
   "Export": {
    "Name": "vpc-s3:ExportsOutputRefvpcPublicSubnet2Subnet009B674FB900C242"
   }
  },
  "ExportsOutputRefvpcPublicSubnet3Subnet11B92D7C8409C46F": {
   "Value": {
    "Ref": "vpcPublicSubnet3Subnet11B92D7C"
   },
   "Export": {
    "Name": "vpc-s3:ExportsOutputRefvpcPublicSubnet3Subnet11B92D7C8409C46F"
   }
  },
  "ExportsOutputFnGetAttairflowsgB178D139GroupId695D4444": {
   "Value": {
    "Fn::GetAtt": [
     "airflowsgB178D139",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "vpc-s3:ExportsOutputFnGetAttairflowsgB178D139GroupId695D4444"
   }
  },
  "ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271": {
   "Value": {
    "Ref": "vpcPrivateSubnet1Subnet934893E8"
   },
   "Export": {
    "Name": "vpc-s3:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271"
   }
  },
  "ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE": {
   "Value": {
    "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
   },
   "Export": {
    "Name": "vpc-s3:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}