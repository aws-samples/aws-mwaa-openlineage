{
 "Metadata": {
  "cdk_nag": {
   "rules_to_suppress": [
    {
     "reason": "No termination protection to enable cleanup of resources.",
     "id": "AwsSolutions-EC29"
    },
    {
     "reason": "Allow managed policies to be used",
     "id": "AwsSolutions-IAM4"
    },
    {
     "reason": "Temporary solution no secret rotation. Default behaviour.",
     "id": "AwsSolutions-SMG4"
    }
   ]
  }
 },
 "Resources": {
  "lineageinstancerole636DD643": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchAgentServerPolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "marquez/lineage_instance_role/Resource"
   }
  },
  "lineageinstanceroleDefaultPolicyDE378D4B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudformation:DescribeStackResource",
        "cloudformation:SignalResource"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AWS::StackId"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "lineageinstanceroleDefaultPolicyDE378D4B",
    "Roles": [
     {
      "Ref": "lineageinstancerole636DD643"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "marquez/lineage_instance_role/DefaultPolicy/Resource"
   }
  },
  "lineageinstanceInstanceProfile0F05B210": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "lineageinstancerole636DD643"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "marquez/lineage_instance/InstanceProfile"
   }
  },
  "lineageinstance37C4CB64ed18b7cd27cc2d59": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "IamInstanceProfile": {
     "Ref": "lineageinstanceInstanceProfile0F05B210"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.xlarge",
    "Monitoring": true,
    "SecurityGroupIds": [
     {
      "Fn::ImportValue": "vpc-s3:ExportsOutputFnGetAttlineagesg953DD04BGroupId23E672A7"
     }
    ],
    "SubnetId": {
     "Fn::ImportValue": "vpc-s3:ExportsOutputRefvpcPublicSubnet1Subnet2E65531ECCB85041"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "marquez/lineage_instance"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n# fingerprint: ed39c645aa42f8a0\n(\n  set +e\n  /opt/aws/bin/cfn-init -v --region ",
        {
         "Ref": "AWS::Region"
        },
        " --stack ",
        {
         "Ref": "AWS::StackName"
        },
        " --resource lineageinstance37C4CB64ed18b7cd27cc2d59 -c default\n  /opt/aws/bin/cfn-signal -e $? --region ",
        {
         "Ref": "AWS::Region"
        },
        " --stack ",
        {
         "Ref": "AWS::StackName"
        },
        " --resource lineageinstance37C4CB64ed18b7cd27cc2d59\n  cat /var/log/cfn-init.log >&2\n)"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "lineageinstanceroleDefaultPolicyDE378D4B",
    "lineageinstancerole636DD643"
   ],
   "CreationPolicy": {
    "ResourceSignal": {
     "Count": 1,
     "Timeout": "PT30M"
    }
   },
   "Metadata": {
    "aws:cdk:path": "marquez/lineage_instance/Resource",
    "AWS::CloudFormation::Init": {
     "configSets": {
      "default": [
       "prereqs",
       "marquez"
      ]
     },
     "prereqs": {
      "packages": {
       "yum": {
        "git": [],
        "docker": []
       }
      },
      "commands": {
       "000": {
        "command": "mkdir -p /usr/local/lib/docker/cli-plugins/"
       },
       "001": {
        "command": "curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose"
       },
       "002": {
        "command": "chmod +x /usr/local/lib/docker/cli-plugins/docker-compose"
       },
       "003": {
        "command": "usermod -aG docker ec2-user"
       },
       "004": {
        "command": "sudo -u ec2-user newgrp"
       }
      },
      "services": {
       "sysvinit": {
        "docker": {
         "enabled": true,
         "ensureRunning": true
        }
       }
      }
     },
     "marquez": {
      "commands": {
       "000": {
        "command": "sudo -u ec2-user docker compose version",
        "ignoreErrors": true
       },
       "001": {
        "command": "sudo -u ec2-user git clone https://github.com/MarquezProject/marquez.git /home/ec2-user/marquez"
       },
       "002": {
        "command": "sudo -u ec2-user ./docker/up.sh --tag 0.44.0 --detach",
        "cwd": "/home/ec2-user/marquez",
        "ignoreErrors": true
       }
      }
     }
    }
   }
  },
  "openlineagenamespace7B5B0012": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Openlineage Namespace",
    "Name": "airflow/variables/OPENLINEAGE_NAMESPACE",
    "SecretString": "cdkdl-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "marquez/openlineage_namespace/Resource"
   }
  },
  "openlineageurlB53435B7": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Openlineage URL",
    "Name": "airflow/variables/OPENLINEAGE_URL",
    "SecretString": {
     "Fn::Join": [
      "",
      [
       "http://",
       {
        "Fn::GetAtt": [
         "lineageinstance37C4CB64ed18b7cd27cc2d59",
         "PublicDnsName"
        ]
       },
       ":5000"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "marquez/openlineage_url/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02Lyw6CMBREv4V9uVrYuHflygY+wFzrRSt9mD5CSNN/N0CIrmbO5EwDvOVwrHAKtXyMtVZ3yH1EOTKcwi0rNJA7p4mdB7umcFrJecFfu9gQ0UoS3g1KU2EkG8j7+m8UFkh6isGgxSd5yP3Ki7O1UlhHwSW/HQV6NBTJL3BN8ZNWd1cKE3N8OXtogXM4Ve+gVO2TjcoQdFt+AYbKhTHkAAAA"
   },
   "Metadata": {
    "aws:cdk:path": "marquez/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "LineageUI": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "lineageinstance37C4CB64ed18b7cd27cc2d59",
        "PublicDnsName"
       ]
      },
      ":3000"
     ]
    ]
   },
   "Export": {
    "Name": "lineage-ui"
   }
  },
  "OpenlineageApi": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "lineageinstance37C4CB64ed18b7cd27cc2d59",
        "PublicDnsName"
       ]
      },
      ":5000"
     ]
    ]
   },
   "Export": {
    "Name": "openlineage-api"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}